Token Create Step


1 Delete Composer.lock file

2 composer require laravel/passport

3 php artisan migrate

4 php artisan passport:install










5 Open Model File

use Laravel\Passport\HasApiTokens;
 
class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;
}









6 Open config/auth.php

'guards' => [
    'web' => [
        'driver' => 'session',
        'provider' => 'users',
    ],
 
    'api' => [
        'driver' => 'passport',
        'provider' => 'users',
    ],
],







7 Open api.php

Route::middleware('auth:api')->group(function () {
    Route::get('/hello',[UserController::class,'index']);
});









8 Open  App/Http/Middleware/Authenticate.php

use Illuminate\Http\Exceptions\HttpResponseException;

Add to last 


    /**
     * Handle an unauthenticated user.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  array  $guards
     * @return void
     *
     * @throws \Illuminate\Auth\HttpResponseException
     */
    protected function unauthenticated($request, array $guards)
    {
        throw new HttpResponseException(
            response()->json([
                "message" => "Please Login"
            ])
        );
    }




9 $token = $user->createToken('authToken');

--------------------------------------------------Get User--------------------------------------------------
use Illuminate\Support\Facades\Auth;

Auth::guard()->user()
---------------------------------------------------Logout---------------------------------------------------
Auth::guard()->user()->token()->revoke()
Auth::guard()->user()->token()->delete()


-------------------------------------------------File Delete-------------------------------------------------
if($user->u_image != 'Profile.jpg')
{
   if (File::exists(public_path("storage/image/user/$user->u_image"))) 
   {
        File::delete(public_path("storage/image/user/$user->u_image"));
   }
}